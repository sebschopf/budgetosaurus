"""
Django settings for personal_budget project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os # Importez os pour la gestion des chemins de fichiers
from dotenv import load_dotenv

load_dotenv() # Charge les variables du fichier .env

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Chemin vers le dossier data à la racine du projet
DATA_DIR = BASE_DIR / 'data'

# Créer les dossiers nécessaires s'ils n'existent pas
DATA_DIR.mkdir(exist_ok=True)
(DATA_DIR / 'imports').mkdir(exist_ok=True)
(DATA_DIR / 'media').mkdir(exist_ok=True)
(DATA_DIR / 'logs').mkdir(exist_ok=True)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY', 'django-insecure-n$d3c28do7^@tm^bf2i(!iny#0*%-v3+j=%g0!88hy-29-4cni')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['budget.moustik.site', 'localhost', '127.0.0.1', '192.168.1.112']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'pytz',  # Pour la gestion des fuseaux horaires
    'webapp',  # application centralisée
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'webapp.middleware.timezone_middleware.TimezoneMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'personal_budget.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'personal_budget.wsgi.application'

# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': DATA_DIR / 'db.sqlite3',  # Base de données dans data/db.sqlite3
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/
LANGUAGE_CODE = 'fr-fr'
TIME_ZONE = 'Europe/Zurich'  # Changé de UTC vers Europe/Zurich
USE_I18N = True
USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/
STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Media files (uploads)
MEDIA_URL = '/media/'
MEDIA_ROOT = DATA_DIR / 'media'  # Fichiers media dans data/media/

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuration du système de logging de Django
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False, # Ne pas désactiver les loggers existants

    # Définition des formats de messages de log
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },

    # Définition des destinations des messages de log (handlers)
    'handlers': {
        'console': { # Affiche les logs dans la console
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
        'file': { # Écrit les logs généraux de Django dans un fichier
            'level': 'DEBUG', # Capture tous les messages de débogage et plus
            'class': 'logging.handlers.RotatingFileHandler', # Rotation des fichiers de log
            'filename': DATA_DIR / 'logs' / 'django_debug.log',  # Logs dans data/logs/
            'maxBytes': 1024*1024*5, # Taille maximale du fichier (5 MB)
            'backupCount': 5, # Nombre de fichiers de sauvegarde
            'formatter': 'verbose',
        },
        'importer_file': { # Handler spécifique pour les importateurs
            'level': 'DEBUG', # Capture tous les messages de débogage pour les importateurs
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': DATA_DIR / 'logs' / 'importer.log',  # Logs dans data/logs/
            'maxBytes': 1024*1024*2, # 2 MB
            'backupCount': 3,
            'formatter': 'verbose',
        },
    },

    # Définition des loggers et de leurs handlers associés
    'loggers': {
        'django': { # Logger pour Django lui-même
            'handlers': ['console', 'file'],
            'level': 'INFO', # Niveau par défaut pour Django
            'propagate': False, # Empêche les messages d'être transmis aux loggers parents
        },
        'webapp.importers': { # Logger spécifique pour le paquet d'importateurs
            'handlers': ['console', 'importer_file'],
            'level': 'DEBUG', # Capture tous les messages de débogage pour les importateurs
            'propagate': False,
        },
        'webapp': { # Logger pour l'application webapp
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': False,
        },
        '': { # Logger par défaut (pour toutes les autres parties de votre code)
            'handlers': ['console', 'file'],
            'level': 'INFO',
            'propagate': False,
        },
    },
}
